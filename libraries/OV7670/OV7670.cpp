#include <OV7670.h>
#include <Wire.h>

#define OV7670_ADDRESS  (0x42 >> 1)
#define OV7670_REG_NUM  114

OV7670::OV7670(void)
{
	ov7670_address = OV7670_ADDRESS;
}


 char  OV7670_reg[OV7670_REG_NUM][2]=
 {	 
 
     // /*以下为OV7670 QVGA RGB565参数    具体内容 可以参考资料里 ov7670中文版PDF资料*/
  	{0x3a, 0x04},//dummy
	{0x40, 0x10},//565
	{0x12, 0x14},//@QVGA Bayer RAW
	{0x32, 0x80},//HREF control	bit[2:0] HREF start 3 LSB	 bit[5:3] HSTOP HREF end 3LSB
	{0x17, 0x16},//              HSTART start high 8-bit MSB
        
	{0x18, 0x04},//5	 HSTOP end high 8-bit
	{0x19, 0x02},
    {0x1a, 0x7a},//0x7a,
    {0x03, 0x0a},//0x0a,
	{0x0c, 0x0c},
    {0x15, 0x00},
	{0x3e, 0x00},//10
	{0x70, 0x00},
	{0x71, 0x01},
	{0x72, 0x11},
	{0x73, 0x09},//
        
	{0xa2, 0x02},//15
	{0x11, 0x00}, //fenpin
	{0x7a, 0x20},
	{0x7b, 0x1c},
	{0x7c, 0x28},
        
	{0x7d, 0x3c},//20
	{0x7e, 0x55},
	{0x7f, 0x68},
	{0x80, 0x76},
	{0x81, 0x80},
        
	{0x82, 0x88},
	{0x83, 0x8f},
	{0x84, 0x96},
	{0x85, 0xa3},
	{0x86, 0xaf},
        
	{0x87, 0xc4},//30
	{0x88, 0xd7},
	{0x89, 0xe8},
	{0x13, 0xe0},
	{0x00, 0x00},//AGC
        
	{0x10, 0x00},
	{0x0d, 0x00},
	{0x14, 0x20},//0x38, limit the max gain
	{0xa5, 0x05},
	{0xab, 0x07},
        
	{0x24, 0x75},//40
	{0x25, 0x63},
	{0x26, 0xA5},
	{0x9f, 0x78},
	{0xa0, 0x68},
        
	{0xa1, 0x03},//0x0b,
	{0xa6, 0xdf},//0xd8,
	{0xa7, 0xdf},//0xd8,
	{0xa8, 0xf0},
	{0xa9, 0x90},
        
	{0xaa, 0x94},//50
	{0x13, 0xe5},
	{0x0e, 0x61},
	{0x0f, 0x4b},
	{0x16, 0x02},
        
	{0x1e, 0x27},//0x07,
	{0x21, 0x02},
	{0x22, 0x91},
	{0x29, 0x07},
	{0x33, 0x0b},
        
	{0x35, 0x0b},//60
	{0x37, 0x1d},
	{0x38, 0x71},
	{0x39, 0x2a},
	{0x3c, 0x78},
        
	{0x4d, 0x40},
	{0x4e, 0x20},
	{0x69, 0x5d},
	{0x6b, 0x40},//PLL
	{0x74, 0x19},
	{0x8d, 0x4f},
        
	{0x8e, 0x00},//70
	{0x8f, 0x00},
	{0x90, 0x00},
	{0x91, 0x00},
	{0x92, 0x00},//0x19,//0x66
        
	{0x96, 0x00},
	{0x9a, 0x80},
	{0xb0, 0x84},
	{0xb1, 0x0c},
	{0xb2, 0x0e},
        
	{0xb3, 0x82},//80
	{0xb8, 0x0a},
	{0x43, 0x14},
	{0x44, 0xf0},
	{0x45, 0x34},
        
	{0x46, 0x58},
	{0x47, 0x28},
	{0x48, 0x3a},
	{0x59, 0x88},
	{0x5a, 0x88},
        
	{0x5b, 0x44},//90
	{0x5c, 0x67},
	{0x5d, 0x49},
	{0x5e, 0x0e},
	{0x64, 0x04},
	{0x65, 0x20},
        
	{0x66, 0x05},
	{0x94, 0x04},
	{0x95, 0x08},
	{0x6c, 0x0a},
	{0x6d, 0x55},
        
        
	{0x4f, 0x80},
	{0x50, 0x80},
	{0x51, 0x00},
	{0x52, 0x22},
	{0x53, 0x5e},
	{0x54, 0x80},
        
	//{0x54, 0x40},//110
        
    //{0x09, 0x03},//驱动能力最大   
	{0x6e, 0x11},//100
	{0x6f, 0x9f},//0x9e for advance AWB
    {0x55, 0x00},//亮度
    {0x56, 0x40},//对比度
    {0x57, 0x80},//0x40,  change according to Jim's request	      
 };
 
void OV7670::init(void)
{
	//writeReg(0x12, 0x80);
	int i;
	for(i=0;i<OV7670_REG_NUM;i++)
  {
	delay(5);
	writeReg(OV7670_reg[i][0],OV7670_reg[i][1]);
  }
}

void OV7670::readpid(void)
{
	pid = readReg(0x0a);
}

void OV7670::writeReg(byte reg, byte value)
{
  Wire.beginTransmission(ov7670_address);
  Wire.write(reg);
  Wire.write(value);
  last_status = Wire.endTransmission();
}

byte OV7670::readReg(byte reg)
{
  byte value;
  
  Wire.beginTransmission(ov7670_address);
  Wire.write(reg);
  last_status = Wire.endTransmission();
  Wire.requestFrom(ov7670_address, (byte)1);
  value = Wire.read();
  Wire.endTransmission();
  
  return value;
}